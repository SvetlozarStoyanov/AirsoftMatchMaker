@model PlayersQueryModel
@{
    ViewBag.Title = "Players";

    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.PlayersCount /
    Model.PlayersPerPage);
    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
          !Model.Players.Any();
}

<h2 class="text-center mt-3 mb-3">
    @ViewBag.Title
</h2>
<form method="get">
    <div class="row mt-5 mb-5">
        <div class="d-flex justify-content-between">

            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-select">
                    @foreach (var sorting in Model.SortingOptions)
                    {
                        <option value="@sorting">@string.Join(" ", Regex.Matches(sorting.ToString(), "[A-Z][a-z]*").Select(m => m.Value).ToArray())</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="SearchTerm">Search</label>
                <input asp-for="SearchTerm" class="form-control" placeholder="...">
            </div>
            <div class="form-group ">
                <label asp-for="PlayersPerPage">Items per page</label>
                <select asp-for="PlayersPerPage" class="form-select">
                    @for (int i = 1; i < 24; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
            </div>
        </div>
    </div>
    <br />


    <div class="row mb-5">

        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
            <a class="btn btn-primary btn-lg @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Players"
               asp-action="Index"
               asp-route-currentPage="@previousPage"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-playersPerPage="@Model.PlayersPerPage"
               asp-route-sorting="@((int)Model.Sorting)"><i class="bi bi-arrow-left-square"></i></a>
        </div>

        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
            <a class="btn btn-primary btn-lg @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
               asp-controller="Players"
               asp-action="Index"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-playersPerPage="@Model.PlayersPerPage"
               asp-route-sorting="@((int)Model.Sorting)"><i class="bi bi-arrow-right-square"></i></a>
        </div>
        <div class="text-center btn-lg">
            <button type="submit" class="btn btn-primary btn-lg">Filter</button>
        </div>
    </div>
</form>
@if (Model.PlayersCount == 0)
{
    <h2 class="text-center mt-3 mb-3">No players meet the current criteria!</h2>
}
else
{
    <div class="row mt-3 mb-3">
        @foreach (var player in Model.Players)
        {
            <partial name="_PlayerPartial" model="@player" />
        }
    </div>
}