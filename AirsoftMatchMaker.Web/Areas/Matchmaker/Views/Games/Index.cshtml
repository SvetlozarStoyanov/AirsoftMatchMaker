@using AirsoftMatchMaker.Infrastructure.Data.Enums;
@model GamesQueryModel
@{
    ViewBag.Title = "Games";

    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.GamesCount /
    Model.GamesPerPage);
    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
          !Model.Games.Any();
}
<h2 class="text-center mt-6 mb-6">@ViewBag.Title</h2>
<form method="get">
    <div class="row mt-6 mb-6">
        <div class="d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="GameStatus">Status</label>
                <select asp-for="GameStatus" class="form-select">
                    @foreach (var gameStatus in Model.GameStatuses)
                    {
                        if (gameStatus != "All")
                        {
                            <option value="@(Enum.Parse<GameStatus>(gameStatus))">@string.Join(" ", Regex.Matches(gameStatus.ToString(), "[A-Z][a-z]*").Select(m => m.Value).ToArray())</option>
                        }
                        else
                        {
                            <option value="@null">All</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="GameModeName">Gamemode</label>
                <select asp-for="GameModeName" class="form-select">
                    @foreach (var gameModeName in Model.GameModeNames)
                    {
                        if (gameModeName != "All")
                        {
                            <option value="@gameModeName">@gameModeName</option>
                        }
                        else
                        {
                            <option value="@null">All</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="TeamName">Team</label>
                <select asp-for="TeamName" class="form-select">
                    @foreach (var teamName in Model.TeamNames)
                    {
                        if (teamName != "All")
                        {
                            <option value="@teamName">@teamName</option>
                        }
                        else
                        {
                            <option value="@null">All</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-select">
                    @foreach (var sorting in Model.SortingOptions)
                    {
                        <option value="@sorting">@string.Join(" ", Regex.Matches(sorting.ToString(), "[A-Z][a-z]*").Select(m => m.Value).ToArray())</option>
                    }
                </select>
            </div>
            <div class="form-group ">
                <label asp-for="GamesPerPage">Items per page</label>
                <select asp-for="GamesPerPage" class="form-select">
                    @for (int i = 1; i < 13; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
            </div>
        </div>
    </div>
    <br />


    <div class="row mb-5">

        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
            <a class="btn btn-primary btn-lg @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-area="Matchmaker"
               asp-controller="Games"
               asp-action="Index"
               asp-route-currentPage="@previousPage"
               asp-route-gameStatus="@Model.GameStatus"
               asp-route-teamName="@Model.TeamName"
               asp-route-gameModeName="@Model.GameModeName"
               asp-route-gamesPerPage="@Model.GamesPerPage"
               asp-route-sorting="@((int)Model.Sorting)"><i class="bi bi-arrow-left-square"></i></a>
        </div>

        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
            <a class="btn btn-primary btn-lg @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
               asp-area="Matchmaker"
               asp-controller="Games"
               asp-action="Index"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-gameStatus="@Model.GameStatus"
               asp-route-teamName="@Model.TeamName"
               asp-route-gameModeName="@Model.GameModeName"
               asp-route-gamesPerPage="@Model.GamesPerPage"
               asp-route-sorting="@((int)Model.Sorting)"><i class="bi bi-arrow-right-square"></i></a>
        </div>
        <div class="text-center btn-lg">
            <button type="submit" class="btn btn-primary btn-lg">Filter</button>
        </div>
    </div>
</form>
<div class="text-center">
    <a asp-area="Matchmaker" asp-controller="Games" asp-action="SelectGameDate" class="btn btn-lg btn-primary mt-6 mb-6">
        Create
        <i class="bi bi-plus-circle"></i>
    </a>
</div>

@if (Model.GamesCount == 0)
{
    <h2 class="text-center mt-3 mb-3">No games found!</h2>
}
else
{
    <div class="row">
        @foreach (var game in Model.Games)
        {
            <partial name="_GamePartial" model="game" />
        }
    </div>
}